# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'UITest4.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.



from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QColor, QBrush
from PyQt5.QtWidgets import QTableWidget
import xlsxOpenpyxl
import quarryDB
from pyqt import constants
import insertDB
import deleteDB

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1142, 782)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout.setObjectName("verticalLayout")
        self.pushButton_1 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_1.setMinimumSize(QtCore.QSize(100, 40))
        self.pushButton_1.setObjectName("pushButton_1")
        self.verticalLayout.addWidget(self.pushButton_1)
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setMinimumSize(QtCore.QSize(100, 40))
        self.pushButton_2.setObjectName("pushButton_2")
        self.verticalLayout.addWidget(self.pushButton_2)
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setMinimumSize(QtCore.QSize(100, 40))
        self.pushButton_3.setObjectName("pushButton_3")
        self.verticalLayout.addWidget(self.pushButton_3)
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setMinimumSize(QtCore.QSize(100, 40))
        self.pushButton_4.setObjectName("pushButton_4")
        self.verticalLayout.addWidget(self.pushButton_4)
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setMinimumSize(QtCore.QSize(100, 40))
        self.pushButton_5.setObjectName("pushButton_5")
        self.verticalLayout.addWidget(self.pushButton_5)
        self.white = QtWidgets.QWidget(self.centralwidget)
        self.white.setObjectName("white")
        self.verticalLayout.addWidget(self.white)
        self.horizontalLayout.addLayout(self.verticalLayout)
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.horizontalLayout.addWidget(self.line)
        self.stackedWidget_1 = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget_1.setObjectName("stackedWidget_1")
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setObjectName("page_3")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.page_3)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.label_2 = QtWidgets.QLabel(self.page_3)
        self.label_2.setObjectName("label_2")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_2)
        self.checkBox = QtWidgets.QCheckBox(self.page_3)
        self.checkBox.setObjectName("checkBox")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.checkBox)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.lineEdit_2)
        self.checkBox_2 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_2.setObjectName("checkBox_2")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.checkBox_2)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_3.setText("")
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.lineEdit_3)
        self.checkBox_3 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_3.setObjectName("checkBox_3")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.checkBox_3)
        self.lineEdit = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit.setObjectName("lineEdit")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.lineEdit)
        self.checkBox_4 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_4.setObjectName("checkBox_4")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.checkBox_4)
        self.lineEdit_4 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.lineEdit_4)
        self.checkBox_5 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_5.setObjectName("checkBox_5")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.checkBox_5)
        self.lineEdit_5 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.lineEdit_5)
        self.checkBox_6 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_6.setObjectName("checkBox_6")
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.checkBox_6)
        self.lineEdit_6 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.lineEdit_6)
        self.checkBox_8 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_8.setObjectName("checkBox_8")
        self.formLayout.setWidget(7, QtWidgets.QFormLayout.LabelRole, self.checkBox_8)
        self.lineEdit_7 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.formLayout.setWidget(7, QtWidgets.QFormLayout.FieldRole, self.lineEdit_7)
        self.checkBox_7 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_7.setObjectName("checkBox_7")
        self.formLayout.setWidget(8, QtWidgets.QFormLayout.LabelRole, self.checkBox_7)
        self.lineEdit_8 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.formLayout.setWidget(8, QtWidgets.QFormLayout.FieldRole, self.lineEdit_8)
        self.checkBox_21 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_21.setObjectName("checkBox_21")
        self.formLayout.setWidget(9, QtWidgets.QFormLayout.LabelRole, self.checkBox_21)
        self.lineEdit_9 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.formLayout.setWidget(9, QtWidgets.QFormLayout.FieldRole, self.lineEdit_9)
        self.checkBox_9 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_9.setObjectName("checkBox_9")
        self.formLayout.setWidget(10, QtWidgets.QFormLayout.LabelRole, self.checkBox_9)
        self.lineEdit_10 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_10.setObjectName("lineEdit_10")
        self.formLayout.setWidget(10, QtWidgets.QFormLayout.FieldRole, self.lineEdit_10)
        self.checkBox_22 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_22.setObjectName("checkBox_22")
        self.formLayout.setWidget(11, QtWidgets.QFormLayout.LabelRole, self.checkBox_22)
        self.lineEdit_11 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_11.setObjectName("lineEdit_11")
        self.formLayout.setWidget(11, QtWidgets.QFormLayout.FieldRole, self.lineEdit_11)
        self.checkBox_10 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_10.setObjectName("checkBox_10")
        self.formLayout.setWidget(12, QtWidgets.QFormLayout.LabelRole, self.checkBox_10)
        self.lineEdit_12 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_12.setObjectName("lineEdit_12")
        self.formLayout.setWidget(12, QtWidgets.QFormLayout.FieldRole, self.lineEdit_12)
        self.checkBox_24 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_24.setObjectName("checkBox_24")
        self.formLayout.setWidget(13, QtWidgets.QFormLayout.LabelRole, self.checkBox_24)
        self.lineEdit_13 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_13.setObjectName("lineEdit_13")
        self.formLayout.setWidget(13, QtWidgets.QFormLayout.FieldRole, self.lineEdit_13)
        self.checkBox_12 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_12.setObjectName("checkBox_12")
        self.formLayout.setWidget(14, QtWidgets.QFormLayout.LabelRole, self.checkBox_12)
        self.lineEdit_14 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_14.setObjectName("lineEdit_14")
        self.formLayout.setWidget(14, QtWidgets.QFormLayout.FieldRole, self.lineEdit_14)
        self.checkBox_23 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_23.setObjectName("checkBox_23")
        self.formLayout.setWidget(15, QtWidgets.QFormLayout.LabelRole, self.checkBox_23)
        self.lineEdit_15 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_15.setObjectName("lineEdit_15")
        self.formLayout.setWidget(15, QtWidgets.QFormLayout.FieldRole, self.lineEdit_15)
        self.checkBox_11 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_11.setObjectName("checkBox_11")
        self.formLayout.setWidget(16, QtWidgets.QFormLayout.LabelRole, self.checkBox_11)
        self.lineEdit_16 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_16.setObjectName("lineEdit_16")
        self.formLayout.setWidget(16, QtWidgets.QFormLayout.FieldRole, self.lineEdit_16)
        self.checkBox_17 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_17.setObjectName("checkBox_17")
        self.formLayout.setWidget(17, QtWidgets.QFormLayout.LabelRole, self.checkBox_17)
        self.lineEdit_17 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_17.setObjectName("lineEdit_17")
        self.formLayout.setWidget(17, QtWidgets.QFormLayout.FieldRole, self.lineEdit_17)
        self.checkBox_18 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_18.setObjectName("checkBox_18")
        self.formLayout.setWidget(18, QtWidgets.QFormLayout.LabelRole, self.checkBox_18)
        self.lineEdit_18 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_18.setObjectName("lineEdit_18")
        self.formLayout.setWidget(18, QtWidgets.QFormLayout.FieldRole, self.lineEdit_18)
        self.checkBox_20 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_20.setObjectName("checkBox_20")
        self.formLayout.setWidget(19, QtWidgets.QFormLayout.LabelRole, self.checkBox_20)
        self.lineEdit_19 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_19.setObjectName("lineEdit_19")
        self.formLayout.setWidget(19, QtWidgets.QFormLayout.FieldRole, self.lineEdit_19)
        self.checkBox_19 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_19.setObjectName("checkBox_19")
        self.formLayout.setWidget(20, QtWidgets.QFormLayout.LabelRole, self.checkBox_19)
        self.lineEdit_20 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_20.setObjectName("lineEdit_20")
        self.formLayout.setWidget(20, QtWidgets.QFormLayout.FieldRole, self.lineEdit_20)
        self.checkBox_13 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_13.setObjectName("checkBox_13")
        self.formLayout.setWidget(21, QtWidgets.QFormLayout.LabelRole, self.checkBox_13)
        self.lineEdit_21 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_21.setObjectName("lineEdit_21")
        self.formLayout.setWidget(21, QtWidgets.QFormLayout.FieldRole, self.lineEdit_21)
        self.checkBox_14 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_14.setObjectName("checkBox_14")
        self.formLayout.setWidget(22, QtWidgets.QFormLayout.LabelRole, self.checkBox_14)
        self.lineEdit_22 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_22.setObjectName("lineEdit_22")
        self.formLayout.setWidget(22, QtWidgets.QFormLayout.FieldRole, self.lineEdit_22)
        self.checkBox_15 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_15.setObjectName("checkBox_15")
        self.formLayout.setWidget(23, QtWidgets.QFormLayout.LabelRole, self.checkBox_15)
        self.lineEdit_23 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_23.setObjectName("lineEdit_23")
        self.formLayout.setWidget(23, QtWidgets.QFormLayout.FieldRole, self.lineEdit_23)
        self.checkBox_16 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_16.setObjectName("checkBox_16")
        self.formLayout.setWidget(24, QtWidgets.QFormLayout.LabelRole, self.checkBox_16)
        self.lineEdit_24 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_24.setObjectName("lineEdit_24")
        self.formLayout.setWidget(24, QtWidgets.QFormLayout.FieldRole, self.lineEdit_24)
        self.checkBox_25 = QtWidgets.QCheckBox(self.page_3)
        self.checkBox_25.setObjectName("checkBox_25")
        self.formLayout.setWidget(25, QtWidgets.QFormLayout.LabelRole, self.checkBox_25)
        self.lineEdit_25 = QtWidgets.QLineEdit(self.page_3)
        self.lineEdit_25.setObjectName("lineEdit_25")
        self.formLayout.setWidget(25, QtWidgets.QFormLayout.FieldRole, self.lineEdit_25)
        self.buttonBox = QtWidgets.QDialogButtonBox(self.page_3)
        self.buttonBox.setMaximumSize(QtCore.QSize(220, 25))
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Apply|QtWidgets.QDialogButtonBox.Reset)
        self.buttonBox.setObjectName("buttonBox")
        self.formLayout.setWidget(26, QtWidgets.QFormLayout.FieldRole, self.buttonBox)
        self.verticalLayout_2.addLayout(self.formLayout)
        self.horizontalLayout_2.addLayout(self.verticalLayout_2)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label = QtWidgets.QLabel(self.page_3)
        self.label.setObjectName("label")
        self.verticalLayout_3.addWidget(self.label)
        self.tableWidget_2 = QtWidgets.QTableWidget(self.page_3)
        self.tableWidget_2.setMinimumSize(QtCore.QSize(700, 630))
        self.tableWidget_2.setObjectName("tableWidget_2")
        self.tableWidget_2.setColumnCount(0)
        self.tableWidget_2.setRowCount(0)
        self.verticalLayout_3.addWidget(self.tableWidget_2)
        self.pushButton_10 = QtWidgets.QPushButton(self.page_3)
        self.pushButton_10.setMinimumSize(QtCore.QSize(100, 0))
        self.pushButton_10.setMaximumSize(QtCore.QSize(100, 25))
        self.pushButton_10.setObjectName("pushButton_10")
        self.verticalLayout_3.addWidget(self.pushButton_10, 0, QtCore.Qt.AlignRight)
        self.horizontalLayout_2.addLayout(self.verticalLayout_3)
        self.stackedWidget_1.addWidget(self.page_3)
        self.page_5 = QtWidgets.QWidget()
        self.page_5.setObjectName("page_5")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.page_5)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_3 = QtWidgets.QLabel(self.page_5)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_5.addWidget(self.label_3)
        self.comboBox = QtWidgets.QComboBox(self.page_5)
        self.comboBox.setMaximumSize(QtCore.QSize(200, 16777215))
        self.comboBox.setObjectName("comboBox")
        self.verticalLayout_5.addWidget(self.comboBox)
        self.label_4 = QtWidgets.QLabel(self.page_5)
        self.label_4.setObjectName("label_4")
        self.verticalLayout_5.addWidget(self.label_4)
        self.tabWidget = QtWidgets.QTabWidget(self.page_5)
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.South)
        self.tabWidget.setObjectName("tabWidget")
        # self.tab = QtWidgets.QWidget()
        # self.tab.setObjectName("tab")
        # self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.tab)
        # self.verticalLayout_6.setObjectName("verticalLayout_6")
        # self.tableWidget = QtWidgets.QTableWidget(self.tab)
        # self.tableWidget.setObjectName("tableWidget")
        # self.tableWidget.setColumnCount(0)
        # self.tableWidget.setRowCount(0)
        # self.verticalLayout_6.addWidget(self.tableWidget)
        # self.tabWidget.addTab(self.tab, "")
        # self.tab_2 = QtWidgets.QWidget()
        # self.tab_2.setObjectName("tab_2")
        # self.tabWidget.addTab(self.tab_2, "")
        self.verticalLayout_5.addWidget(self.tabWidget)
        self.stackedWidget_1.addWidget(self.page_5)
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.stackedWidget_1.addWidget(self.page)

        #CURD 页layout

        self.page_4 = QtWidgets.QWidget()
        self.page_4.setObjectName("page_4")
        self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.page_4)
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        # self.verticalLayout_13.setStretch(0, 1)
        # self.verticalLayout_13.setStretch(1, 1)
        # self.verticalLayout_13.setStretch(2, 4)

        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")

        #单板 框布局
        self.verticalLayout_7 = QtWidgets.QVBoxLayout()
        self.verticalLayout_7.setSizeConstraint(QtWidgets.QLayout.SetFixedSize)
        self.verticalLayout_7.setObjectName("verticalLayout_7")


        self.label_31 = QtWidgets.QLabel(self.page_4)
        self.label_31.setMinimumSize(QtCore.QSize(0, 12))
        self.label_31.setMaximumSize(QtCore.QSize(300, 12))
        self.label_31.setObjectName("label_31")
        self.verticalLayout_7.addWidget(self.label_31)
        self.treeWidget = QtWidgets.QTreeWidget(self.page_4)
        # self.treeWidget.setMaximumSize(QtCore.QSize(300, 200))
        self.treeWidget.setObjectName("treeWidget")
        # item_0 = QtWidgets.QTreeWidgetItem(self.treeWidget)
        # item_0.setCheckState(0, QtCore.Qt.Unchecked)
        # item_1 = QtWidgets.QTreeWidgetItem(item_0)
        # item_1.setCheckState(0, QtCore.Qt.Unchecked)
        # item_1 = QtWidgets.QTreeWidgetItem(item_0)
        # item_1.setCheckState(0, QtCore.Qt.Unchecked)
        self.verticalLayout_7.addWidget(self.treeWidget)



        self.horizontalLayout_5.addLayout(self.verticalLayout_7)
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.label_33 = QtWidgets.QLabel(self.page_4)
        self.label_33.setMinimumSize(QtCore.QSize(0, 12))
        self.label_33.setMaximumSize(QtCore.QSize(16777215, 12))
        self.label_33.setObjectName("label_33")
        self.verticalLayout_8.addWidget(self.label_33)
        self.listWidget = QtWidgets.QListWidget(self.page_4)
        self.listWidget.setMinimumSize(QtCore.QSize(560, 0))
        self.listWidget.setObjectName("listWidget")
        self.verticalLayout_8.addWidget(self.listWidget)
        self.horizontalLayout_5.addLayout(self.verticalLayout_8)
        self.pushButton_11 = QtWidgets.QPushButton(self.page_4)
        self.pushButton_11.setMinimumSize(QtCore.QSize(100, 30))
        self.pushButton_11.setMaximumSize(QtCore.QSize(100, 30))
        self.pushButton_11.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.pushButton_11.setObjectName("pushButton_11")
        self.horizontalLayout_5.addWidget(self.pushButton_11)
        self.verticalLayout_13.addLayout(self.horizontalLayout_5)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout()
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.label_32 = QtWidgets.QLabel(self.page_4)
        self.label_32.setObjectName("label_32")
        self.verticalLayout_9.addWidget(self.label_32)

        # 初始化提交界面的table
        self.tableWidget_3 = QtWidgets.QTableWidget(self.page_4)
        self.tableWidget_3.setObjectName("tableWidget_3")
        self.tableWidget_3.setColumnCount(len(constants.head_name_cn))
        self.tableWidget_3.setRowCount(1)
        self.tableWidget_3.setHorizontalHeaderLabels(constants.head_name_cn)
        self.verticalLayout_7.addWidget(self.tableWidget_3)

        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.widget = QtWidgets.QWidget(self.page_4)
        self.widget.setObjectName("widget")
        self.horizontalLayout_4.addWidget(self.widget)

        # 提交键
        # self.pushButton = QtWidgets.QPushButton(self.page_4)
        # self.pushButton.setMinimumSize(QtCore.QSize(0, 30))
        # self.pushButton.setMaximumSize(QtCore.QSize(100, 16777215))
        # self.pushButton.setObjectName("pushButton")
        # self.horizontalLayout_4.addWidget(self.pushButton)
        #
        # self.tableWidget_3 = QtWidgets.QTableWidget(self.page_4)
        # self.tableWidget_3.setObjectName("tableWidget_3")
        # self.tableWidget_3.setColumnCount(0)
        # self.tableWidget_3.setRowCount(0)

        self.verticalLayout_9.addWidget(self.tableWidget_3)
        self.horizontalLayout_3.addLayout(self.verticalLayout_9)
        self.verticalLayout_11 = QtWidgets.QVBoxLayout()
        self.verticalLayout_11.setObjectName("verticalLayout_11")

#搜索键
        self.pushButton_6 = QtWidgets.QPushButton(self.page_4)
        self.pushButton_6.setMinimumSize(QtCore.QSize(100, 30))
        self.pushButton_6.setMaximumSize(QtCore.QSize(100, 30))
        self.pushButton_6.setObjectName("pushButton_6")
        self.verticalLayout_11.addWidget(self.pushButton_6)
 #提交键
        self.pushButton = QtWidgets.QPushButton(self.page_4)
        self.pushButton.setMinimumSize(QtCore.QSize(100, 30))
        self.pushButton.setMaximumSize(QtCore.QSize(100, 30))
        self.pushButton.setContextMenuPolicy(QtCore.Qt.ActionsContextMenu)
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout_11.addWidget(self.pushButton)

        self.horizontalLayout_3.addLayout(self.verticalLayout_11)
        self.verticalLayout_13.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout()
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.label_5 = QtWidgets.QLabel(self.page_4)
        self.label_5.setObjectName("label_5")
        self.verticalLayout_10.addWidget(self.label_5)

        #搜索结果layout
        self.tableWidget_4 = QtWidgets.QTableWidget(self.page_4)

        self.tableWidget_4.setObjectName("tableWidget_4")
        self.tableWidget_4.setColumnCount(0)
        self.tableWidget_4.setRowCount(0)


        self.verticalLayout_10.addWidget(self.tableWidget_4)
        self.horizontalLayout_4.addLayout(self.verticalLayout_10)
        self.verticalLayout_12 = QtWidgets.QVBoxLayout()
        self.verticalLayout_12.setSizeConstraint(QtWidgets.QLayout.SetMaximumSize)
        self.verticalLayout_12.setSpacing(6)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.pushButton_9 = QtWidgets.QPushButton(self.page_4)
        self.pushButton_9.setMinimumSize(QtCore.QSize(100, 30))
        self.pushButton_9.setMaximumSize(QtCore.QSize(100, 30))
        self.pushButton_9.setObjectName("pushButton_9")
        self.verticalLayout_12.addWidget(self.pushButton_9)
        self.pushButton_8 = QtWidgets.QPushButton(self.page_4)
        self.pushButton_8.setMinimumSize(QtCore.QSize(100, 30))
        self.pushButton_8.setMaximumSize(QtCore.QSize(100, 30))
        self.pushButton_8.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.pushButton_8.setAutoFillBackground(True)
        self.pushButton_8.setObjectName("pushButton_8")
        self.verticalLayout_12.addWidget(self.pushButton_8)
        self.pushButton_7 = QtWidgets.QPushButton(self.page_4)
        self.pushButton_7.setMinimumSize(QtCore.QSize(100, 30))
        self.pushButton_7.setMaximumSize(QtCore.QSize(100, 30))
        self.pushButton_7.setObjectName("pushButton_7")
        self.verticalLayout_12.addWidget(self.pushButton_7)
        self.horizontalLayout_4.addLayout(self.verticalLayout_12)
        self.verticalLayout_13.addLayout(self.horizontalLayout_4)


        self.stackedWidget_1.addWidget(self.page_4)
        self.horizontalLayout.addWidget(self.stackedWidget_1)
        #s

        # self.horizontalLayout.setStretch(1,7)

        self.verticalLayout_4.addLayout(self.horizontalLayout)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1142, 23))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.stackedWidget_1.setCurrentIndex(3)
        self.comboBox.setCurrentIndex(-1)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    # 注册信号槽

        # treewidget
        self.treeWidget.itemChanged.connect(self.check_item)

        # 监听按钮
        self.pushButton_1.clicked.connect(self.show_page)
        self.pushButton_2.clicked.connect(self.show_page)
        self.pushButton_3.clicked.connect(self.show_page)
        self.pushButton_4.clicked.connect(self.show_page)
        self.pushButton_5.clicked.connect(self.show_page)

        # 监听checkbox的状态改变  先写一部分进行测试
        self.checkBox.stateChanged.connect(self.select_text)
        self.checkBox_2.stateChanged.connect(self.select_text)
        self.checkBox_3.stateChanged.connect(self.select_text)
        self.checkBox_4.stateChanged.connect(self.select_text)
        self.checkBox_5.stateChanged.connect(self.select_text)

        # 默认text只读 同样先测试前五个
        self.lineEdit_2.setReadOnly(1)
        self.lineEdit_3.setReadOnly(1)
        self.lineEdit.setReadOnly(1)
        self.lineEdit_4.setReadOnly(1)
        self.lineEdit_5.setReadOnly(1)

        # 提交和重置按钮
        self.buttonBox.button(QtWidgets.QDialogButtonBox.Apply).clicked.connect(self.apply_form)
        # self.buttonBox.button(QtWidgets.QDialogButtonBox.Reset).clicked.connect(self.reset_form)

        # 批量插入表下拉资源单监听
        self.comboBox.addItems(constants.resources)
        self.comboBox.currentIndexChanged.connect(self.select_from_resources)
        self.selected_hardware = []

        # 从constants初始化tree下拉表单（状态表）
        for i in range(len(constants.resources)):
            if i == 0:  # 跳过第一条 也就是“形态表”
                continue
            root = self.add_root(constants.resources[i])
            # 从constants初始化tree 下拉表单的子表（单板）
            for j in range(len(constants.resources_dic[constants.resources[i]])):
                self.add_child(constants.resources_dic[constants.resources[i]][j], j, root)

        # 添加提交键监听
        # self.pushButton.clicked.connect(self.submit_form)
        self.pushButton.clicked.connect(self.double_check_submit)

        #搜索键监听
        self.pushButton_6.clicked.connect(self.search)

        #设置CURD界面比例layout
        self.verticalLayout_13.setStretch(0, 2)
        self.verticalLayout_13.setStretch(1, 1)
        self.verticalLayout_13.setStretch(2, 10)

        #注册删除按钮
        self.pushButton_8.clicked.connect(self.double_check_delete)

        #注册更新键
        # self.pushButton_9.clicked.connect(self.update)

        #注册导出键
        self.pushButton_7.clicked.connect(self.search_to_excel)
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton_1.setText(_translate("MainWindow", "浏览"))
        self.pushButton_2.setText(_translate("MainWindow", "搜索"))
        self.pushButton_3.setText(_translate("MainWindow", "对比"))
        self.pushButton_4.setText(_translate("MainWindow", "添加"))
        self.pushButton_5.setText(_translate("MainWindow", "删除"))
        self.label_2.setText(_translate("MainWindow", "检索条件："))
        self.checkBox.setText(_translate("MainWindow", "业务名称"))
        self.checkBox_2.setText(_translate("MainWindow", "位宽（bit）"))
        self.checkBox_3.setText(_translate("MainWindow", "条数（K）"))
        self.checkBox_4.setText(_translate("MainWindow", "TID位宽"))
        self.checkBox_5.setText(_translate("MainWindow", "TID值"))
        self.checkBox_6.setText(_translate("MainWindow", "SubTid位宽"))
        self.checkBox_8.setText(_translate("MainWindow", "subTid值"))
        self.checkBox_7.setText(_translate("MainWindow", "存储位置"))
        self.checkBox_21.setText(_translate("MainWindow", "算法表ID"))
        self.checkBox_9.setText(_translate("MainWindow", "算法表规格（K）"))
        self.checkBox_22.setText(_translate("MainWindow", "动作表ID"))
        self.checkBox_10.setText(_translate("MainWindow", "测试规格（K）"))
        self.checkBox_24.setText(_translate("MainWindow", "单多播"))
        self.checkBox_12.setText(_translate("MainWindow", "index/data"))
        self.checkBox_23.setText(_translate("MainWindow", "TCAM起始地址"))
        self.checkBox_11.setText(_translate("MainWindow", "TBLM_ID"))
        self.checkBox_17.setText(_translate("MainWindow", "落地部门"))
        self.checkBox_18.setText(_translate("MainWindow", "落地负责人"))
        self.checkBox_20.setText(_translate("MainWindow", "落地情况确认"))
        self.checkBox_19.setText(_translate("MainWindow", "备注"))
        self.checkBox_13.setText(_translate("MainWindow", "server type位宽"))
        self.checkBox_14.setText(_translate("MainWindow", "server type值"))
        self.checkBox_15.setText(_translate("MainWindow", "单板名称"))
        self.checkBox_16.setText(_translate("MainWindow", "CheckBox"))
        self.checkBox_25.setText(_translate("MainWindow", "CheckBox"))
        self.label.setText(_translate("MainWindow", "检索结果："))
        self.pushButton_10.setText(_translate("MainWindow", "导出到Excel"))
        self.label_3.setText(_translate("MainWindow", "形态表："))
        self.label_4.setText(_translate("MainWindow", "当前形态："))
        # self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Tab 1"))
        # self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Tab 2"))
        self.label_31.setText(_translate("MainWindow", "选择要检索的单板"))
        self.treeWidget.headerItem().setText(0, _translate("MainWindow", "形态表"))
        __sortingEnabled = self.treeWidget.isSortingEnabled()
        self.treeWidget.setSortingEnabled(False)
        # self.treeWidget.topLevelItem(0).setText(0, _translate("MainWindow", "表1"))
        # self.treeWidget.topLevelItem(0).child(0).setText(0, _translate("MainWindow", "单板1"))
        # self.treeWidget.topLevelItem(0).child(1).setText(0, _translate("MainWindow", "单板2"))
        self.treeWidget.setSortingEnabled(__sortingEnabled)
        self.label_33.setText(_translate("MainWindow", "日志："))
        self.pushButton_11.setText(_translate("MainWindow", "清空"))
        self.label_32.setText(_translate("MainWindow", "待编辑条目："))
        self.pushButton_6.setText(_translate("MainWindow", "搜索"))
        self.pushButton.setText(_translate("MainWindow", "提交"))
        self.label_5.setText(_translate("MainWindow", "检索结果："))
        self.pushButton_9.setText(_translate("MainWindow", "保存更改"))
        self.pushButton_8.setText(_translate("MainWindow", "删除选中条目"))
        self.pushButton_7.setText(_translate("MainWindow", "导出到excel"))


    def show_page(self):
        dic = {
            "pushButton_1": 1,
            "pushButton_2": 0,
            "pushButton_3": 2,
            "pushButton_4": 3,
            "pushButton_5": 4
        }
        index = dic[self.stackedWidget_1.sender().objectName()]
        self.stackedWidget_1.setCurrentIndex(index)

        # 根据checkbox解锁text输入

    def select_text(self):
        dic = {
            "checkBox": self.lineEdit_2,
            "checkBox_2": self.lineEdit_3,
            "checkBox_3": self.lineEdit,
            "checkBox_4": self.lineEdit_4,
            "checkBox_5": self.lineEdit_5,

        }
        index = dic[self.stackedWidget_1.sender().objectName()]
        print(self.lineEdit_2.text() == '')

        if self.stackedWidget_1.sender().isChecked():
            index.setReadOnly(0)
        else:
            index.setReadOnly(1)
        # 提交查询表单 试用 先提交两个

    def apply_form(self):
        list = []
        # 插入三个数据
        list.append(self.lineEdit_2.text())
        list.append(self.lineEdit_3.text())
        list.append(self.lineEdit.text())
        print(list)
        result = quarryDB.quarry_search(list[0], list[1], list[2])  # 搜索结果
        # 贴到table上
        self.tableWidget_2.setRowCount(len(result))
        self.tableWidget_2.setColumnCount(len(result[0]))
        # 表头
        headName = quarryDB.get_head_name('test')
        print(headName)
        self.tableWidget_2.setHorizontalHeaderLabels(headName)

        for i in range(len(result)):
            for j in range(len(result[0])):
                print(i)
                self.tableWidget_2.setItem(i, j, QTableWidgetItem(result[i][j]))

        # def show_data_table(self, data):
        #     self.tableWidget_2.setRowCount()

        # 重置表单
        # def reset_form(self):

        # 从下拉栏中选择形态表

    def select_from_resources(self):
        resource = self.stackedWidget_1.sender().currentText()
        resource_list = constants.resources_dic[resource]  # 获得一串 tablename

        for i in resource_list:
            # print(i)
            results = quarryDB.quarry_all(i)  # 查询一个table返回所有搜索结果
            self.browse_form(i, results)

    def browse_form(self, tablename, results):
        # 初始化一个tab页
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        # 设置成垂直排列
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.tab)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        # 把table放到tab里
        self.tableWidget = QtWidgets.QTableWidget(self.tab)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        self.verticalLayout_6.addWidget(self.tableWidget)
        self.tabWidget.addTab(self.tab, "")
        _translate = QtCore.QCoreApplication.translate
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", tablename))

        # # 贴到table上
        self.tableWidget.setRowCount(len(results))
        self.tableWidget.setColumnCount(len(results[0]))
        # #表头 设置成中文
        headName = quarryDB.get_head_name(tablename)
        for i in range(len(headName)):
            headName[i] = constants.head_name[headName[i]]
        self.tableWidget.setHorizontalHeaderLabels(headName)

        for i in range(len(results)):
            for j in range(len(results[0])):
                self.tableWidget.setItem(i, j, QTableWidgetItem(results[i][j]))

    def check_item(self,item,col):
        # print(self.stackedWidget_1.sender().objectName())
        #勾选逻辑
        if item.checkState(col) == QtCore.Qt.Checked:
            for i in range(item.childCount()):
                if(item.child(i).checkState(col) == QtCore.Qt.Unchecked):
                    item.child(i).setCheckState(col,QtCore.Qt.Checked)
            flag = [0]
            # print('检查子列结束')
            # print(item.parent().text(col))
            #

            if item.parent() != None:
                for i in range(item.parent().childCount()):
                    # print('检查slibling')
                    if item.parent().child(i).checkState(col) == QtCore.Qt.Unchecked:
                        flag[0] = 1
                        # print(flag)
            if flag[0] == 0 and item.parent() != None and item.parent().checkState(col) == QtCore.Qt.Unchecked :
                # print('falg == 0')

                item.parent().setCheckState(col,QtCore.Qt.Checked)
        #取消勾选逻辑 用到2个flag
        else:
            flag1 = [0]
            flag2 = True
            if item.parent() != None and item.parent().checkState(col) == QtCore.Qt.Checked:
                item.parent().setCheckState(col,QtCore.Qt.Unchecked)
            for i in range(item.childCount()):
                if item.child(i).checkState(col) == QtCore.Qt.Checked:
                    flag1[0] = 1
                flag2 = flag2 and item.child(i).checkState(col) == QtCore.Qt.Checked
            if flag1[0] == 0 or flag2:
                for i in range(item.childCount()):
                    item.child(i).setCheckState(col,QtCore.Qt.Unchecked)
        #收集check的单板

        hardware = []
        for i in range(self.treeWidget.topLevelItemCount()):
            for j in range(self.treeWidget.topLevelItem(i).childCount()):
                if(self.treeWidget.topLevelItem(i).child(j).checkState(col) == QtCore.Qt.Checked):
                    hardware.append(self.treeWidget.topLevelItem(i).child(j).text(col))
        self.selected_hardware  = hardware



    #增加单板选择表中的父节点， 也就是形态表
    def add_root(self, name):
        _translate = QtCore.QCoreApplication.translate
        # self.treeWidget = QtWidgets.QTreeWidget(self.page_4)
        # self.treeWidget.setObjectName("treeWidget")
        item_0 = QtWidgets.QTreeWidgetItem(self.treeWidget)
        item_0.setCheckState(0, QtCore.Qt.Unchecked)
        self.treeWidget.topLevelItem(self.treeWidget.topLevelItemCount() - 1).setText(0, _translate("MainWindow", name))
        # item_1 = QtWidgets.QTreeWidgetItem(item_0)
        # item_1.setCheckState(0, QtCore.Qt.Unchecked)
        # item_1 = QtWidgets.QTreeWidgetItem(item_0)
        # item_1.setCheckState(0, QtCore.Qt.Unchecked)
        return item_0

    def add_child(self, name, index, root):
        _translate = QtCore.QCoreApplication.translate
        item_1 = QtWidgets.QTreeWidgetItem(root)
        item_1.setCheckState(0, QtCore.Qt.Unchecked)
        self.treeWidget.topLevelItem(self.treeWidget.topLevelItemCount() - 1).child(index).setText(0, _translate("MainWindow", name))

    def double_check_submit(self):
        A = QMessageBox.question(self.stackedWidget_1, '确认', '是否确定插入该条目？', QMessageBox.Yes | QMessageBox.No)  # 创建一个二次确认框
        if A == QMessageBox.Yes:
            self.submit_form()
        else:
            print('cancel')
    #重写
    def submit_form(self):
        form = []
        for i in range(len(constants.head_name_cn)):
            if self.tableWidget_3.item(0,i) != None:
                text = self.tableWidget_3.item(0,i).text()
                print(text)

                form.append(text)

            else:
                form.append('N/A')



        for i in self.selected_hardware:
            print(i, form)
            insertDB.insert_db(i, form[0], form[1], form[2], form[3], form[4], form[5], form[6], form[7],
                               form[8], form[9], form[10]
                               , form[11], form[12], form[13], form[14], form[15], form[16], form[17], form[18],
                               form[19], form[20])
        self.search()

    def search(self):
        self.tableWidget_4.clearContents()
        self.tableWidget_4.setRowCount(0)

        form = []
        for i in range(len(constants.head_name_cn)):
            if self.tableWidget_3.item(0,i) != None and self.tableWidget_3.item(0,i) != '':
                text = self.tableWidget_3.item(0,i).text()
                print(text)

                form.append(text)

            else:
                form.append('N/A')




        for i in self.selected_hardware:
            print(i, form)
            results = quarryDB.quarry_search(i, form[0], form[1], form[2], form[3], form[4], form[5], form[6], form[7],
                               form[8], form[9], form[10]
                               , form[11], form[12], form[13], form[14], form[15], form[16], form[17], form[18],
                               form[19], form[20])
            # print(result)
            self.show_search_results(results,i)
        # self.show_search_results(results)

    def show_search_results(self, results,tablename):
        try:
            preRow = self.tableWidget_4.rowCount()
            self.tableWidget_4.setRowCount(preRow + len(results))
            self.tableWidget_4.setColumnCount(len(results[0]))
            # 表头
            self.tableWidget_4.setHorizontalHeaderLabels(constants.head_name_search)
            for i in range(len(results)):
                for j in range(len(results[0])):



                    self.tableWidget_4.setItem(i + preRow, j, QTableWidgetItem(results[i][j]))
                    if j == 0:
                        self.tableWidget_4.setItem(i + preRow, j, QTableWidgetItem(tablename))
            # 搜索结果框自适应
            self.tableWidget_4.horizontalHeader().setSectionResizeMode(0, QHeaderView.ResizeToContents)

            # self.tableWidget_4.item(1,3).setBackground(QBrush(QColor(60,179,113)))
            self.rander_table_background(self.tableWidget_4)


        except Exception as e:
            print("results is empty")
    def rander_table_background(self, table):
        for i in range(table.rowCount()):
            if table.item(i,3).text() != 'N/A':
                num = int(table.item(i,3).text()) + 1

                table.item(i,3).setBackground(QBrush(QColor(num*111%255,num*99%255,120)))

            if table.item(i,4).text() != 'N/A':
                num = int(table.item(i, 4).text()) + 1
                table.item(i, 4).setBackground(QBrush(QColor(num * 130 % 255, num * 120 % 255, 120)))


    def delete(self):
        form = []
        for i in range(self.tableWidget_4.rowCount()):
            if self.tableWidget_4.item(i,0).isSelected():
                for j in range(self.tableWidget_4.columnCount()):
                    form.append(self.tableWidget_4.item(i,j).text())
        if len(form) != 0:
            deleteDB.delete( form[0], form[1], form[2], form[3], form[4], form[5], form[6], form[7],
                               form[8], form[9], form[10]
                               , form[11], form[12], form[13], form[14], form[15], form[16], form[17], form[18],
                               form[19], form[20],form[21])

            self.search()
        else:
            print('no item selected')
    #确认删除
    def double_check_delete(self):
        A = QMessageBox.question(self.stackedWidget_1, '确认', '是否确定删除该条目？', QMessageBox.Yes | QMessageBox.No)  # 创建一个二次确认框
        if A == QMessageBox.Yes:
            self.delete()
        else:
            print('cancel')

    #更新整张表 需要原子性
    # def update(self):
    #     form = []
    #     for i in range(self.tableWidget_4.rowCount()):
    #         for j in range(self.tableWidget_4.columnCount()):
    #             form.append(self.tableWidget_4.item(i,j).text())
    #         if len(form) != 0:
    #             deleteDB.updata( form[0], form[1], form[2], form[3], form[4], form[5], form[6], form[7],
    #                                form[8], form[9], form[10]
    #                                , form[11], form[12], form[13], form[14], form[15], form[16], form[17], form[18],
    #                                form[19], form[20],form[21])

        #     self.search()
        # else:
        #     print('')

    def search_to_excel(self):
        result = []
        for i in self.tableWidget_4.rowCount():
            row = []
            for j in self.tableWidget_4.columnCount():
                row.append(self.tableWidget_4.item(i,j).text())
            result.append(row)

        xlsxOpenpyxl.write_excel_xlsx('','',result)







#必须加入的
import sys


from PyQt5.QtWidgets import QApplication, QMainWindow, QTableWidgetItem, QLineEdit, QMessageBox, QHeaderView

if __name__ == '__main__':
    app = QApplication(sys.argv)
    mainWindow = QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(mainWindow)
    mainWindow.show()
    sys.exit(app.exec_())